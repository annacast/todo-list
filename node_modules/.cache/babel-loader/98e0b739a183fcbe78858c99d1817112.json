{"remainingRequest":"/Users/annacast/workspace/todo-list/node_modules/babel-loader/lib/index.js!/Users/annacast/workspace/todo-list/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/annacast/workspace/todo-list/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/annacast/workspace/todo-list/src/components/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/annacast/workspace/todo-list/src/components/List.vue","mtime":1550253900000},{"path":"/Users/annacast/workspace/todo-list/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/annacast/workspace/todo-list/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/annacast/workspace/todo-list/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/annacast/workspace/todo-list/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Task from './Item.vue';\nexport default {\n  name: 'List',\n  template: '#list',\n  props: {\n    tasks: {\n      default: []\n    }\n  },\n  data: function data() {\n    return {\n      task: ''\n    };\n  },\n  computed: {\n    incomplete: function incomplete() {\n      return this.tasks.filter(this.pending).length;\n    }\n  },\n  components: {\n    Task: Task\n  },\n  methods: {\n    addItem: function addItem() {\n      if (this.task) {\n        this.tasks.push({\n          text: this.task,\n          completed: false\n        });\n        this.task = '';\n      }\n    },\n    removeItem: function removeItem(index) {\n      this.tasks.splice(index, 1);\n    },\n    completeItem: function completeItem(item) {\n      item.completed = !item.completed;\n    },\n    clearCompleted: function clearCompleted() {\n      this.tasks = this.tasks.filter(this.pending);\n    },\n    clearAll: function clearAll() {\n      this.tasks = [];\n    },\n    pending: function pending(item) {\n      return !this.isCompleted(item);\n    },\n    isCompleted: function isCompleted(item) {\n      return item.completed;\n    }\n  }\n};",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,OAAA,IAAA,MAAA,YAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,QAAA,EAAA,OAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AAAA,MAAA,OAAA,EAAA;AAAA;AADA,GAHA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GAVA;AAWA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,KAAA,KAAA,CAAA,MAAA,CAAA,KAAA,OAAA,EAAA,MAAA;AACA;AAHA,GAXA;AAgBA,EAAA,UAAA,EAAA;AAAA,IAAA,IAAA,EAAA;AAAA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,UAAA,KAAA,IAAA,EAAA;AACA,aAAA,KAAA,CAAA,IAAA,CAAA;AACA,UAAA,IAAA,EAAA,KAAA,IADA;AAEA,UAAA,SAAA,EAAA;AAFA,SAAA;AAIA,aAAA,IAAA,GAAA,EAAA;AACA;AACA,KATA;AAUA,IAAA,UAVA,sBAUA,KAVA,EAUA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,KAZA;AAaA,IAAA,YAbA,wBAaA,IAbA,EAaA;AACA,MAAA,IAAA,CAAA,SAAA,GAAA,CAAA,IAAA,CAAA,SAAA;AACA,KAfA;AAgBA,IAAA,cAhBA,4BAgBA;AACA,WAAA,KAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,KAAA,OAAA,CAAA;AACA,KAlBA;AAmBA,IAAA,QAnBA,sBAmBA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,KArBA;AAsBA,IAAA,OAtBA,mBAsBA,IAtBA,EAsBA;AACA,aAAA,CAAA,KAAA,WAAA,CAAA,IAAA,CAAA;AACA,KAxBA;AAyBA,IAAA,WAzBA,uBAyBA,IAzBA,EAyBA;AACA,aAAA,IAAA,CAAA,SAAA;AACA;AA3BA;AAjBA,CAAA","sourcesContent":["<template id=\"list\">\n\t<section class=\"tasks\">\n    <h1>\n      To Do\n      <transition name=\"fade\">\n        <small v-if=\"incomplete\">({{ incomplete }})</small>\n      </transition>\n    </h1>\n    <div class=\"tasks__new input-group\">\n      <input\n        type=\"text\"\n        class=\"input-group-field\"\n        v-model=\"task\"\n        @keyup.enter=\"addItem\"\n        placeholder=\"New task\"\n      >\n      <span class=\"input-group-button\">\n        <button @click=\"addItem\" class=\"button\">\n          <i class=\"fa fa-plus\"></i> Add\n        </button>\n      </span>\n    </div>\n\n    <div class=\"tasks__clear button-group pull-right\">\n      <button\n        class=\"button warning small\"\n        @click=\"clearCompleted\"\n      >\n        <i class=\"fa fa-check\"></i> Clear Completed\n      </button>\n      <button class=\"button alert small\" @click=\"clearAll\">\n        <i class=\"fa fa-trash\"></i> Clear All\n      </button>\n    </div>\n\n    <transition-group name=\"fade\" tag=\"ul\" class=\"tasks__list no-bullet\">\n      <Task\n        v-for=\"(task, idx) in tasks\"\n        @remove=\"removeItem(idx)\"\n        @complete=\"completeItem(task)\"\n        :task=\"task\"\n        :key=\"idx\"\n      ></Task>\n    </transition-group>\n  </section>\n</template>\n\n<script>\n  import Task from './Item.vue';\n  export default {\n    name: 'List',\n    template: '#list',\n    props: {\n      tasks: { default: [] }\n    },\n    data () {\n      return {\n        task: ''\n      }\n    },\n    computed: {\n      incomplete() {\n        return this.tasks.filter(this.pending).length;\n      }\n    },\n    components: { Task },\n    methods: {\n      addItem() {\n        if (this.task) {\n          this.tasks.push({\n            text: this.task,\n            completed: false\n          });\n          this.task = '';\n        }\n      },\n      removeItem(index) {\n        this.tasks.splice(index, 1)\n      },\n      completeItem(item) {\n        item.completed = !item.completed\n      },\n      clearCompleted() {\n        this.tasks = this.tasks.filter(this.pending);\n      },\n      clearAll() {\n        this.tasks = [];\n      },\n      pending(item) {\n        return !this.isCompleted(item);\n      },\n      isCompleted(item) {\n        return item.completed;\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src/components"}]}